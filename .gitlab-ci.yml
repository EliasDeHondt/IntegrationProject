############################
# @author Elias De Hondt   #
# @see https://eliasdh.com #
# @since 01/03/2024        #
############################
# Function: This file is used to define the CI/CD pipeline for the project.
image: mcr.microsoft.com/dotnet/sdk:7.0

variables:
  OBJECTS_DIRECTORY: 'obj'
  NUGET_PACKAGES_DIRECTORY: '.nuget'
  SOURCE_CODE_PATH: '*/'

cache:
  key: "$CI_COMMIT_REF_SLUG"
  paths:
    - '$SOURCE_CODE_PATH$OBJECTS_DIRECTORY/project.assets.json'
    - '$SOURCE_CODE_PATH$OBJECTS_DIRECTORY/*.csproj.nuget.*'
    - '$NUGET_PACKAGES_DIRECTORY'
  policy: pull-push

before_script:
  - 'dotnet restore --packages $NUGET_PACKAGES_DIRECTORY'

stages:
  - build
  - quality_check

build:
  stage: build
  script:
    - apt-get update && apt-get install -y curl
    - curl -fsSL https://deb.nodesource.com/setup_16.x | bash -
    - apt-get install -y nodejs
    - 'dotnet build --no-restore'
      
quality_check:
  stage: quality_check
  script:
    - apt-get update && apt-get install -y curl
    - curl -fsSL https://deb.nodesource.com/setup_16.x | bash -
    - apt-get install -y nodejs
    - 'dotnet build --no-restore --verbosity quiet' # Build again to ensure all artifacts are generated

    # Integrate code quality tools here
    # ESLint for JavaScript files
    - docker run --rm -v "$PWD:/app" -w /app node:latest npm install eslint --global
    - docker run --rm -v "$PWD:/app" -w /app node:latest eslint .

    # StyleCop for C# files
    - docker run --rm -v "$PWD:/app" -w /app mcr.microsoft.com/dotnet/sdk:7.0 bash -c "dotnet tool install --global StyleCopCmd.GlobalTool --version 1.1.118 && export PATH=\"$PATH:/root/.dotnet/tools\" && dotnet stylecop analyze --directory /app"

    # SonarQube for general code analysis
    - docker run --rm -v "$PWD:/app" -w /app sonarsource/sonar-scanner-cli:latest sonar-scanner