<Project Sdk="Microsoft.NET.Sdk.Web">

    <PropertyGroup>
        <TargetFramework>net7.0</TargetFramework>
        <Nullable>disable</Nullable>
        <ImplicitUsings>enable</ImplicitUsings>
        <IsPackable>false</IsPackable>
        <MpaRoot>ClientApp</MpaRoot>
        <WWWRoot>wwwroot\</WWWRoot>
        <DefaultItemExcludes>$(DefaultItemExcludes);$(MpaRoot)node_modules\**</DefaultItemExcludes>
    </PropertyGroup>

    <ItemGroup>
        <ProjectReference Include="..\Phygital.BL\Phygital.BL.csproj" />
        <ProjectReference Include="..\Phygital.DAL\Phygital.DAL.csproj" />
        <ProjectReference Include="..\Phygital.Domain\Phygital.Domain.csproj" />
    </ItemGroup>

    <ItemGroup>
        <AdditionalFiles Include="Views\Flow\Step.cshtml"/>
    </ItemGroup>

    <ItemGroup>
        <Content Update="ClientApp\src\css\site.css">
            <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
            <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        </Content>
        <Content Update="Assets\Rocket league in Wheelchair meme.mp4">
          <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
          <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        </Content>
    </ItemGroup>

    <ItemGroup>
        <_ContentIncludedByDefault Remove="wwwroot\js\site.js"/>
        <_ContentIncludedByDefault Remove="custom npm packages\opencv-ts\.eslintrc.json" />
        <_ContentIncludedByDefault Remove="custom npm packages\opencv-ts\package.json" />
        <_ContentIncludedByDefault Remove="custom npm packages\opencv-ts\tsconfig.json" />
        <_ContentIncludedByDefault Remove="custom npm packages\opencv-ts\tsconfig.test.json" />
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="Google.Apis.Gmail.v1" Version="1.68.0.3399" />
        <PackageReference Include="Google.Cloud.Storage.V1" Version="4.9.0" />
        <PackageReference Include="Microsoft.AspNetCore.Identity.UI" Version="7.0.17" />
        <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="7.0.16"/>
        <PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="7.0.17" />
        <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="7.0.17">
          <PrivateAssets>all</PrivateAssets>
          <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="7.0.12" />
    </ItemGroup>

    <ItemGroup>
        <Content Remove="$(MpaRoot)**"/>
        <None Remove="$(MpaRoot)**"/>
        <None Include="$(MpaRoot)**" Exclude="$(MpaRoot)node_modules\**"/>

    </ItemGroup>

    <ItemGroup>
      <Folder Include="Pages\" />
      <Folder Include="Views\Project\Modals\" />
      <Folder Include="Views\Statistics\" />
      <Folder Include="wwwroot\Assets\Videos\" />
    </ItemGroup>

    <Target Name="NpmInstall" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(MpaRoot)node_modules') ">
        <!-- Ensure Node.js is installed -->
        <Exec Command="node --version" ContinueOnError="true">
            <Output TaskParameter="ExitCode" PropertyName="ErrorCode"/>
        </Exec>
        <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE."/>
        <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..."/>
        <Exec WorkingDirectory="$(MpaRoot)" Command="npm install"/>
    </Target>

    <Target Name="NpmRunBuild" BeforeTargets="Build" DependsOnTargets="NpmInstall">
        <Exec WorkingDirectory="$(MpaRoot)" Command="npm run build"/>
    </Target>

    <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
        <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
        <Exec WorkingDirectory="$(MpaRoot)" Command="npm install"/>
        <Exec WorkingDirectory="$(MpaRoot)" Command="npm run build"/>

        <!-- Include the newly-built files in the publish output -->
        <ItemGroup>
            <DistFiles Include="$(WWWRoot)dist\**"/>
            <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
                <RelativePath>%(DistFiles.Identity)</RelativePath>
                <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
                <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
            </ResolvedFileToPublish>
        </ItemGroup>
    </Target>

    <Target Name="NpmClean" BeforeTargets="Clean">
        <RemoveDir Directories="$(WWWRoot)dist"/>
        <RemoveDir Directories="$(MpaRoot)node_modules"/>
    </Target>

</Project>
